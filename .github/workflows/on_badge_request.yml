name: Handle Language Badge Request

on:
  issues:
    types: [opened]

permissions:
  contents: write   # needed for pushing commits
  issues: write     # for commenting and closing issues

jobs:
  handle-badge-request:
    if: contains(github.event.issue.labels.*.name, 'badge-request')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # needed to push commits back

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install requests
        run: python -m pip install requests

      - name: Parse repo from issue body
        id: parse_repo
        run: |
          echo "OWNER_REPO=$(echo '${{ github.event.issue.body }}' | grep -oP '([\w.-]+/[\w.-]+)' | head -1)" >> $GITHUB_OUTPUT
          echo "FILE_NAME=$(echo $OWNER_REPO | tr / _).svg" >> $GITHUB_OUTPUT

      - name: Run language badge script
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/scripts/fetch.py

      - name: Commit and push badge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER_REPO: ${{ steps.parse_repo.outputs.OWNER_REPO }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

          git add badges/
          git commit -m "Add language badge for $OWNER_REPO" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref_name }}

      - name: Get latest commit SHA
        id: get_sha
        run: echo "COMMIT_SHA=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Comment on the issue with badge info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}
          FILE_NAME: ${{ steps.parse_repo.outputs.FILE_NAME }}
          COMMIT_SHA: ${{ steps.get_sha.outputs.COMMIT_SHA }}
        run: |
          BADGE_URL="https://raw.githubusercontent.com/${REPO}/${COMMIT_SHA}/badges/${FILE_NAME}"
          COMMENT_BODY="Badge generated: ${BADGE_URL}"
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER/comments \
            -d "{\"body\": \"$COMMENT_BODY\"}"

      - name: Close the issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}
        run: |
          curl -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER \
            -d '{"state":"closed"}'